syntax = "proto2";

// Send this request to the world simulator at beginning as a start of simulation process
// Connect with the world server with worldid, init the world with warehouses
// A new world server will be created if no worldid is provided.
message AConnect {
  optional int64 worldid = 1;
  repeated AInitWarehouse initwh = 2;
  required bool isAmazon = 3;
}

// Reponse message for Aconnect from world server
// If we connect to a world with worldid successfully, or a new world with worldid is created successfully: result = connected!
message AConnected {
  required int64 worldid= 1;
  required string result = 2;
}

// This is the only request that you can send to the world simulator after connecting to it
message ACommands {
  repeated APurchaseMore buy = 1;
  repeated APack topack = 2; 
  repeated APutOnTruck load = 3;
  repeated AQuery queries = 4;
  optional uint32 simspeed = 5; 
  optional bool disconnect = 6;
  repeated int64 acks =7;
}

// This is the only response that you can get from the world simulater after connecting to it
message AResponses {
  repeated APurchaseMore arrived = 1;
  repeated APacked ready = 2; 
  repeated ALoaded loaded = 3; 
  optional bool finished = 4;
  repeated AErr error = 5;
  repeated int64 acks = 6;
  repeated APackage packagestatus = 7;
}

// This is an INTERNAL request resides in AConnect
// Create a warehouse at (x, y) with warehouseId = id
message AInitWarehouse {
  required int32 id = 1;
  required int32 x = 2;
  required int32 y = 3;
}

// This is an INTERNAL request that resides in APurchaseMore
// Create product with productId = id
// The product will have description and quantity = count
message AProduct {
  required int64 id = 1;
  required string description = 2;
  required int32 count = 3;
}

// This is an INTERNAL request that resides in ACommand
// Purchase more things(goods) into warehouse #whnum
// The description for the same things(goods) MUST be consistent every time you make this request.
// seqnum is the sequence number for this request.
message APurchaseMore {
  required int32 whnum = 1;
  repeated AProduct things = 2;
  required int64 seqnum = 3;
}

// This is an INTERNAL request that resides in ACommand
// Pack things(goods) into an order with orderid = shipid
// The packing process will be at warehouse #whnum. Make sure this warehouse has all goods that are required by this order.
// The order will also be ready at warehouse #whnum after packing.
// seqnum is the sequence number for this request.
message APack {
  required int32 whnum = 1;
  repeated AProduct things = 2;
  required int64 shipid = 3;
  required int64 seqnum = 4;
}

// Response message for APack from world server
// The shipid and seqnum should be the same as in the APack request
message APacked {
  required int64 shipid = 1;
  required int64 seqnum = 2;
}

// This is an INTERNAL request that resides in ACommand
// Load an order #shipid onto a truck #truckid at warehouse #whnum
// Make sure that there is a truck #truckid and an order #shipid at warehouse #whnum
// seqnum is the sequence number for this request.
message APutOnTruck{
  required int32 whnum = 1;
  required int32 truckid = 2;
  required int64 shipid = 3;
  required int64 seqnum = 4;
}

// Response message for APutOnTruck from world server
// The shipid and seqnum should be the same as in the APutOnTruck request
message ALoaded{
  required int64 shipid = 1;
  required int64 seqnum = 2;
}

// This is an INTERNAL request that resides in ACommand
// Query request that amazon has to handle ??
// seqnum is the sequence number for this request.
message AQuery{
  required int64 packageid = 1;
  required int64 seqnum = 2;
}

// Query response from the world server?
// packageid and seqnum should be the same as in the AQuery request
message APackage{
  required int64 packageid =1;
  required string status = 2;
  required int64 seqnum = 3;
}


// Error message from the world server
// ?? originseqnum and seqnum
message AErr{
  required string err = 1;
  required int64 originseqnum = 2;
  required int64 seqnum = 3;
}


